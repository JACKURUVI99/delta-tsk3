name: CI/CD Pipeline for Lua Chat Server

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and test
      run: |
        echo "Building Lua chat server..."
        docker build -t lua-chat-server .
        echo "Build completed successfully!"
    
    - name: Run basic tests
      run: |
        echo "Running basic tests..."
        # Test if the server can start (basic smoke test)
        timeout 10s docker run --rm lua-chat-server lua5.3 -e "print('Server can start')" || true
        echo "Basic tests completed!"
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/lua-chat-server:latest
          ${{ secrets.DOCKER_USERNAME }}/lua-chat-server:${{ github.sha }}
    
    - name: Deploy to staging (if main branch)
      if: github.ref == 'refs/heads/main'
      run: |
        echo "Deploying to staging environment..."
        # In a real scenario, you would deploy to your staging server here
        echo "Deployment completed!"

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Deploy to production
      run: |
        echo "Starting production deployment..."
        # Here you would typically SSH to your production server
        # and run the deploy script
        echo "Production deployment completed!"